$((function(){$("#currentUserId").val();function e(e,t){0===$("#user-message").length&&$("body").append('<div id="user-message" class="message-container"></div>');const s=$(`<div class="message ${"success"===t?"success-message":"error-message"}">${e}</div>`);$("#user-message").append(s),setTimeout((()=>{s.fadeOut(300,(function(){$(this).remove()}))}),3e3)}function t(e,t){const s=window.location.protocol,n=window.location.host;window.location.href=`${s}//${n}/admin/userslist/${e}/${t}`}function s(e){return confirm(`Are you sure you want to ${e}?`)}function n(t,s,n){return new Promise(((o,i)=>{a({url:`/admin/api/posts/${t}/${s}`,method:"POST",element:n,successCallback:function(e){o(e)},errorCallback:function(t,n){e(n.message||`Failed to ${s} post`,"error"),i(n)}})}))}function o(e){const t=e.hasClass("deleted-post"),s=e.hasClass("blocked-post"),n=e.data("original-content"),o=e.find(".delete-post-btn"),a=e.find(".restore-post-btn"),i=e.find(".block-post-btn"),d=e.find(".unblock-post-btn"),c=e.find(".post-status-badges");c.empty(),t?(c.append('<span class="deleted-status status-badge">DELETED</span>'),e.find(".post-content").html('<p class="system-message">This post was deleted by the admin, because it violated the community rules.</p>')):e.find(".post-content p.system-message").length||e.find(".post-content p").text()||e.find(".post-content").html(`<p>${n}</p>`),s?(c.append('<span class="blocked-status status-badge">BLOCKED</span>'),t||e.find(".post-content").html('<p class="system-message">This post was blocked by the admin, because it violated the community rules.</p>')):t||e.find(".post-content").html(`<p>${n}</p>`),o.prop("disabled",t),a.prop("disabled",!t),i.prop("disabled",s||t),d.prop("disabled",!s||t);const l=e.find(".comments-section"),r=e.find(".toggle-comments-btn");t||s?(t?r.addClass("deleted-btn").removeClass("blocked-btn"):s&&r.addClass("blocked-btn").removeClass("deleted-btn"),l.hasClass("hidden")||(l.addClass("hidden"),r.html('<i class="fas fa-angle-down"></i> Show Comments'))):r.removeClass("deleted-btn blocked-btn")}function a(t){const s={method:"GET",data:{},showLoadingContainer:!1,...t};if(s.element&&s.element.addClass("loading"),s.showLoadingContainer&&s.loadingContainer){$(s.loadingContainer).addClass("loading container-loading")}$.ajax({url:s.url,method:s.method,data:s.data,success:function(e){s.element&&s.element.removeClass("loading"),s.showLoadingContainer&&s.loadingContainer&&$(s.loadingContainer).removeClass("loading container-loading"),"function"==typeof s.successCallback&&s.successCallback(e)},error:function(t,n,o){s.element&&s.element.removeClass("loading"),s.showLoadingContainer&&s.loadingContainer&&$(s.loadingContainer).removeClass("loading container-loading");let a={message:"An error occurred"};try{t.responseJSON?a=t.responseJSON:t.responseText&&(a=JSON.parse(t.responseText))}catch(e){console.warn("Failed to parse error response:",e)}"function"==typeof s.errorCallback?s.errorCallback(o,a,t):function(t,s,n=!0){let o="An unexpected error occurred",a={};"string"==typeof t?o=t:t.responseJSON?(o=t.responseJSON.error||`Server error (${t.status||"unknown status"})`,a={status:t.status,statusText:t.statusText,responseJSON:t.responseJSON}):t instanceof Error?(o=t.message,a={name:t.name,stack:t.stack}):t.error&&(o=t.error,a=t),console.error(`Error in ${s}:`,o,a),n&&e(o,"error")}(o,{context:`API call to ${s.url}`,status:t.status,errorData:a})}})}$("#currentUserId").length>0&&function(){const t=$(".posts-list"),i=$(".feed-list-container");window.adminCache={$postsList:t,$postsContainer:i,selectors:{}},$(document).on("click",".delete-post-btn",(function(){const t=$(this),a=t.data("post-id"),i=t.closest(".post-item");s("delete this post")&&n(a,"delete",t).then((function(t){t.success&&(i.addClass("deleted-post"),i.find(".post-content").html('<p class="system-message">This post was deleted by the admin, because it violated the community rules.</p>'),o(i),e(t.message||"Post deleted","success"))}))})),$(document).on("click",".restore-post-btn",(function(){const t=$(this),a=t.data("post-id"),i=t.closest(".post-item"),d=i.data("original-content");s("restore this post")&&n(a,"restore",t).then((function(t){t.success&&(i.removeClass("deleted-post"),i.find(".post-content").html(`<p>${d}</p>`),o(i),e(t.message||"Post restored","success"))}))})),$(document).on("click",".block-post-btn",(function(){const t=$(this),a=t.data("post-id"),i=t.closest(".post-item");s("block this post")&&n(a,"block",t).then((function(t){t.success&&(i.addClass("blocked-post"),i.hasClass("deleted-post")||i.find(".post-content").html('<p class="system-message">This post was blocked by the admin, because it violated the community rules.</p>'),o(i),e(t.message||"Post blocked","success"))}))})),$(document).on("click",".unblock-post-btn",(function(){const t=$(this),a=t.data("post-id"),i=t.closest(".post-item"),d=i.data("original-content");s("unblock this post")&&n(a,"unblock",t).then((function(t){t.success&&(i.removeClass("blocked-post"),i.hasClass("deleted-post")||i.find(".post-content").html(`<p>${d}</p>`),o(i),e(t.message||"Post unblocked","success"))}))})),$(document).on("click",".toggle-comments-btn",(function(){const e=$(this),t=e.closest(".post-item").find(".comments-section");e.toggleClass("active"),t.hasClass("hidden")?(t.removeClass("hidden"),setTimeout((function(){t.addClass("visible")}),10),e.html('<i class="fas fa-angle-up"></i> Hide commentaries')):(t.removeClass("visible"),setTimeout((function(){t.addClass("hidden")}),400),e.html('<i class="fas fa-angle-down"></i> Show commentaries'))})),$(document).on("click",".delete-comment-btn",(function(){const t=$(this),n=t.data("post-id"),o=t.data("comment-id"),i=t.closest(".comment-item"),d=t.closest(".post-item").find(".comments-count");s("delete this comment")&&a({url:`/admin/posts/${n}/comments/${o}`,method:"DELETE",element:t,successCallback:function(t){i.fadeOut(300,(function(){$(this).remove();const t=d.closest(".post-item");!function(e,t){const s=e.find(".comments-count");s.text(`Comments (${t})`);const n=e.find(".comments-section");n.find(".comment-item").length,0!==t||n.hasClass("hidden")||(0===n.find(".no-comments-message").length&&n.html('<p class="no-comments-message">No comments</p>'),n.addClass("visible"));const o=e.find(".toggle-comments-btn");o.length&&(o.text(t>0?`Show comments (${t})`:"No comments"),0===t?o.addClass("disabled"):o.removeClass("disabled"))}(t,parseInt(d.text().match(/\d+/)[0])-1);const s=t.find(".comments-section");0!==s.find(".comment-item").length||s.hasClass("hidden")||(s.html('<p class="no-comments-message">No commentaries</p>'),s.addClass("visible")),e("Comment deleted successfully","success")}))},errorCallback:function(t){e("Failed to delete comment","error"),console.error("Error deleting comment:",t)}})}))}(),function(){0===$(".offline-indicator").length&&$("body").prepend('<div class="offline-indicator">You are offline. Some features are unavailable.</div>');window.addEventListener("online",(function(){$("body").removeClass("offline"),e("You are back online","success")})),window.addEventListener("offline",(function(){$("body").addClass("offline"),e("You are offline. Some features are unavailable.","warning")})),navigator.onLine||$("body").addClass("offline")}(),$(document).on("click",".user-friends",(function(){t($(this).data("id"),"friends")})),$(document).on("click",".user-feed",(function(){t($(this).data("id"),"feed")})),$(document).on("click",".delete-friend-btn",(function(){const t=$(this),n=t.closest(".friend-row"),o=t.data("friend-id"),i=$("#currentUserId").val();o&&i&&s("remove this friend")&&a({url:`/admin/userslist/${i}/friends`,method:"DELETE",data:{friendId:o},element:t,successCallback:function(){n.fadeOut(300,(function(){$(this).remove(),e("Friend removed successfully","success"),0===$(".friend-row").length&&$(".friends-table").html('<div class="no-friends">No friends found</div>')}))},errorCallback:function(t){e("Failed to remove friend","error"),console.error("Error removing friend:",t)}})})),$(document).on("click",".save-changes",(function(){const t=$(this),s=t.data("id"),n=t.closest(".user-row"),o={fullname:n.find("input[type='text'][id='floatingInputValue']").val(),email:n.find("input[type='email']").val(),birthdate:n.find("input[type='date']").val(),role:n.find(".role input").val(),status:n.find(".status input").val()};o.fullname&&o.email?a({url:`/admin/users/${s}`,method:"PUT",data:o,element:t,successCallback:function(t){e("User data updated successfully","success")},errorCallback:function(t){e("Failed to update user data","error"),console.error("Error updating user:",t)}}):e("Name and email are required fields","error")})),$(document).on("click",".dropdown-item.role-admin, .dropdown-item.role-user",(function(e){e.preventDefault();const t=$(this).data("value")||$(this).text(),s=$(this).closest(".input-group").find("input.form-control");s.val(t),s.attr("class","form-control role-"+t)})),$(document).on("click",".dropdown-item.status-active, .dropdown-item.status-unverified, .dropdown-item.status-blocked",(function(e){e.preventDefault();const t=$(this).data("value")||$(this).text(),s=$(this).closest(".input-group").find("input.form-control");s.val(t),s.attr("class","form-control status-"+t)})),$(document).ready((function(){}))}));