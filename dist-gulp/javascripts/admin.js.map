{"version":3,"file":"admin.js","names":["$","currentUserId","val","length","initPostsFeed","setupConnectionMonitoring","prepend","window","addEventListener","removeClass","showUserMessage","addClass","navigator","onLine","document","on","navigateToUserSection","data","$btn","friendRow","closest","friendId","userId","confirmAction","executeApiCall","url","concat","method","element","successCallback","fadeOut","remove","html","errorCallback","error","console","userRow","userData","fullname","find","email","birthdate","role","status","response","e","preventDefault","text","inputField","attr","message","type","append","messageClass","messageElement","setTimeout","section","protocol","location","host","href","$postsList","$postsContainer","adminCache","selectors","setupPostActions","setupCommentToggle","setupCommentActions","getSelector","selector","context","cache","cacheKey","renderElements","container","items","renderer","fragment","createDocumentFragment","forEach","item","appendChild","jQuery","empty","setupDeletePostAction","setupRestorePostAction","setupBlockPostAction","setupUnblockPostAction","postId","postItem","performPostAction","then","result","success","updatePostStatusVisuals","originalContent","hasClass","button","commentsSection","toggleClass","updateCommentsCount","count","commentsCount","remainingComments","toggleBtn","commentId","commentItem","parseInt","match","actionText","confirm","action","Promise","resolve","reject","errorData","isDeleted","isBlocked","$deleteBtn","$restoreBtn","$blockBtn","$unblockBtn","$statusContainer","prop","$commentsSection","$commentsToggle","handleError","showToUser","arguments","undefined","errorMessage","errorDetails","responseJSON","statusText","Error","name","stack","details","options","defaults","showLoadingContainer","settings","_objectSpread","loadingContainer","ajax","xhr","responseText","JSON","parse","warn","updatePostStatus","config","badge","systemMessage","commentBtnUpdates","commentBtn","buttonToEnable","buttonToDisable","updatePostActionsUI","ready"],"sources":["admin.js"],"sourcesContent":["/**\n * MATRIX ADMIN PANEL - Main JavaScript File\n * This file contains all the client-side functionality for the admin panel\n */\n\n$(function () {\n  // Get current user ID from hidden field (if exists)\n  const currentUserId = $(\"#currentUserId\").val() || null;\n\n  // Initialize the feed functionality if we're on the feed page\n  if ($(\"#currentUserId\").length > 0) {\n    initPostsFeed();\n  }\n\n  // Setup online/offline status monitoring\n  setupConnectionMonitoring();\n\n  /**\n   * ====================================================\n   * CONNECTION MONITORING\n   * ====================================================\n   */\n\n  /**\n   * Monitor online/offline status and inform user of changes\n   */\n  function setupConnectionMonitoring() {\n    // Add offline indicator to the page\n    if ($(\".offline-indicator\").length === 0) {\n      $(\"body\").prepend(\n        '<div class=\"offline-indicator\">You are offline. Some features are unavailable.</div>'\n      );\n    }\n\n    // Handle online event\n    window.addEventListener(\"online\", function () {\n      $(\"body\").removeClass(\"offline\");\n      showUserMessage(\"You are back online\", \"success\");\n    });\n\n    // Handle offline event\n    window.addEventListener(\"offline\", function () {\n      $(\"body\").addClass(\"offline\");\n      showUserMessage(\n        \"You are offline. Some features are unavailable.\",\n        \"warning\"\n      );\n    });\n\n    // Set initial state\n    if (!navigator.onLine) {\n      $(\"body\").addClass(\"offline\");\n    }\n  }\n\n  /**\n   * ====================================================\n   * USER NAVIGATION & ACTIONS\n   * ====================================================\n   */\n\n  // Navigate to user's friends page\n  $(document).on(\"click\", \".user-friends\", function () {\n    navigateToUserSection($(this).data(\"id\"), \"friends\");\n  });\n\n  // Navigate to user's feed page\n  $(document).on(\"click\", \".user-feed\", function () {\n    navigateToUserSection($(this).data(\"id\"), \"feed\");\n  });\n\n  // Delete friend relationship\n  $(document).on(\"click\", \".delete-friend-btn\", function () {\n    const $btn = $(this);\n    const friendRow = $btn.closest(\".friend-row\");\n    const friendId = $btn.data(\"friend-id\");\n    const userId = $(\"#currentUserId\").val();\n\n    if (friendId && userId && confirmAction(\"remove this friend\")) {\n      executeApiCall({\n        url: `/admin/userslist/${userId}/friends`,\n        method: \"DELETE\",\n        data: { friendId },\n        element: $btn,\n        successCallback: function () {\n          // Анимация удаления строки\n          friendRow.fadeOut(300, function () {\n            $(this).remove();\n            showUserMessage(\"Friend removed successfully\", \"success\");\n\n            // Если друзей больше нет, показываем сообщение\n            if ($(\".friend-row\").length === 0) {\n              $(\".friends-table\").html(\n                '<div class=\"no-friends\">No friends found</div>'\n              );\n            }\n          });\n        },\n        errorCallback: function (error) {\n          showUserMessage(\"Failed to remove friend\", \"error\");\n          console.error(\"Error removing friend:\", error);\n        },\n      });\n    }\n  });\n\n  // Save user changes\n  $(document).on(\"click\", \".save-changes\", function () {\n    const $btn = $(this);\n    const userId = $btn.data(\"id\");\n    const userRow = $btn.closest(\".user-row\");\n\n    // Collect data from form fields\n    const userData = {\n      fullname: userRow\n        .find(\"input[type='text'][id='floatingInputValue']\")\n        .val(),\n      email: userRow.find(\"input[type='email']\").val(),\n      birthdate: userRow.find(\"input[type='date']\").val(),\n      role: userRow.find(\".role input\").val(),\n      status: userRow.find(\".status input\").val(),\n    };\n\n    // Validate data\n    if (!userData.fullname || !userData.email) {\n      showUserMessage(\"Name and email are required fields\", \"error\");\n      return;\n    }\n\n    // Save user data\n    executeApiCall({\n      url: `/admin/users/${userId}`,\n      method: \"PUT\",\n      data: userData,\n      element: $btn,\n      successCallback: function (response) {\n        showUserMessage(\"User data updated successfully\", \"success\");\n      },\n      errorCallback: function (error) {\n        showUserMessage(\"Failed to update user data\", \"error\");\n        console.error(\"Error updating user:\", error);\n      },\n    });\n  });\n\n  // Handle role change from dropdown\n  $(document).on(\n    \"click\",\n    \".dropdown-item.role-admin, .dropdown-item.role-user\",\n    function (e) {\n      e.preventDefault(); // Prevent default anchor behavior that scrolls to top\n      const role = $(this).data(\"value\") || $(this).text();\n      const inputField = $(this)\n        .closest(\".input-group\")\n        .find(\"input.form-control\");\n\n      inputField.val(role);\n      inputField.attr(\"class\", \"form-control role-\" + role);\n    }\n  );\n\n  // Handle status change from dropdown\n  $(document).on(\n    \"click\",\n    \".dropdown-item.status-active, .dropdown-item.status-unverified, .dropdown-item.status-blocked\",\n    function (e) {\n      e.preventDefault(); // Prevent default anchor behavior that scrolls to top\n      const status = $(this).data(\"value\") || $(this).text();\n      const inputField = $(this)\n        .closest(\".input-group\")\n        .find(\"input.form-control\");\n\n      inputField.val(status);\n      inputField.attr(\"class\", \"form-control status-\" + status);\n    }\n  );\n\n  /**\n   * Shows a message to the user\n   * @param {string} message - The message to display\n   * @param {string} type - Message type (success, error)\n   */\n  function showUserMessage(message, type) {\n    // Create message element if it doesn't exist\n    if ($(\"#user-message\").length === 0) {\n      $(\"body\").append(\n        '<div id=\"user-message\" class=\"message-container\"></div>'\n      );\n    }\n\n    const messageClass =\n      type === \"success\" ? \"success-message\" : \"error-message\";\n    const messageElement = $(\n      `<div class=\"message ${messageClass}\">${message}</div>`\n    );\n\n    $(\"#user-message\").append(messageElement);\n\n    // Remove message after 3 seconds\n    setTimeout(() => {\n      messageElement.fadeOut(300, function () {\n        $(this).remove();\n      });\n    }, 3000);\n  }\n\n  /**\n   * Helper function to navigate to different user sections\n   * @param {string} userId - The ID of the user\n   * @param {string} section - The section to navigate to (friends, feed, etc.)\n   */\n  function navigateToUserSection(userId, section) {\n    const protocol = window.location.protocol;\n    const host = window.location.host;\n    window.location.href = `${protocol}//${host}/admin/userslist/${userId}/${section}`;\n  }\n\n  /**\n   * ====================================================\n   * POSTS FEED FUNCTIONALITY\n   * ====================================================\n   */\n\n  /**\n   * Initialize the posts feed page functionality\n   */\n  function initPostsFeed() {\n    // Cache commonly used selectors\n    const $postsList = $(\".posts-list\");\n    const $postsContainer = $(\".feed-list-container\");\n\n    // Store references to avoid repeated DOM lookups\n    window.adminCache = {\n      $postsList: $postsList,\n      $postsContainer: $postsContainer,\n      selectors: {},\n    };\n\n    // Set up event handlers for post actions\n    setupPostActions();\n\n    // Set up comment visibility toggling\n    setupCommentToggle();\n\n    // Set up comment deletion\n    setupCommentActions();\n  }\n\n  // Вспомогательная функция для кэширования селекторов\n  function getSelector(selector, context) {\n    const cache = window.adminCache.selectors;\n\n    // Создаем ключ кэша на основе селектора и контекста\n    const cacheKey = `${selector}_${\n      context ? $(context).data(\"id\") || \"ctx\" : \"global\"\n    }`;\n\n    if (!cache[cacheKey]) {\n      cache[cacheKey] = context ? $(selector, context) : $(selector);\n    }\n\n    return cache[cacheKey];\n  }\n\n  // Вспомогательная функция для эффективного создания и добавления элементов\n  function renderElements(container, items, renderer) {\n    // Создаем фрагмент документа для всех элементов\n    const fragment = document.createDocumentFragment();\n\n    // Добавляем каждый элемент в фрагмент\n    items.forEach((item) => {\n      const element = renderer(item);\n      fragment.appendChild(element instanceof jQuery ? element[0] : element);\n    });\n\n    // Очищаем контейнер и добавляем фрагмент за одну операцию\n    container.empty().append(fragment);\n  }\n\n  /**\n   * Set up all post action buttons (delete, restore, block, unblock)\n   */\n  function setupPostActions() {\n    setupDeletePostAction();\n    setupRestorePostAction();\n    setupBlockPostAction();\n    setupUnblockPostAction();\n  }\n\n  /**\n   * Set up post action handlers\n   * Responsible for delete, restore, block and unblock actions\n   */\n  function setupDeletePostAction() {\n    $(document).on(\"click\", \".delete-post-btn\", function () {\n      const $btn = $(this);\n      const postId = $btn.data(\"post-id\");\n      const postItem = $btn.closest(\".post-item\");\n\n      if (confirmAction(\"delete this post\")) {\n        performPostAction(postId, \"delete\", $btn).then(function (result) {\n          if (result.success) {\n            postItem.addClass(\"deleted-post\");\n\n            // Заменяем содержимое на системное сообщение\n            postItem\n              .find(\".post-content\")\n              .html(\n                '<p class=\"system-message\">This post was deleted by the admin, because it violated the community rules.</p>'\n              );\n\n            updatePostStatusVisuals(postItem);\n            showUserMessage(result.message || \"Post deleted\", \"success\");\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Set up restore post action\n   */\n  function setupRestorePostAction() {\n    $(document).on(\"click\", \".restore-post-btn\", function () {\n      const $btn = $(this);\n      const postId = $btn.data(\"post-id\");\n      const postItem = $btn.closest(\".post-item\");\n      const originalContent = postItem.data(\"original-content\");\n\n      if (confirmAction(\"restore this post\")) {\n        performPostAction(postId, \"restore\", $btn).then(function (result) {\n          if (result.success) {\n            postItem.removeClass(\"deleted-post\");\n\n            // Восстанавливаем содержимое поста\n            postItem.find(\".post-content\").html(`<p>${originalContent}</p>`);\n\n            updatePostStatusVisuals(postItem);\n            showUserMessage(result.message || \"Post restored\", \"success\");\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Set up block post action\n   */\n  function setupBlockPostAction() {\n    $(document).on(\"click\", \".block-post-btn\", function () {\n      const $btn = $(this);\n      const postId = $btn.data(\"post-id\");\n      const postItem = $btn.closest(\".post-item\");\n\n      if (confirmAction(\"block this post\")) {\n        performPostAction(postId, \"block\", $btn).then(function (result) {\n          if (result.success) {\n            postItem.addClass(\"blocked-post\");\n\n            // Если пост не удален, заменяем содержимое на системное сообщение\n            if (!postItem.hasClass(\"deleted-post\")) {\n              postItem\n                .find(\".post-content\")\n                .html(\n                  '<p class=\"system-message\">This post was blocked by the admin, because it violated the community rules.</p>'\n                );\n            }\n\n            updatePostStatusVisuals(postItem);\n            showUserMessage(result.message || \"Post blocked\", \"success\");\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Set up unblock post action\n   */\n  function setupUnblockPostAction() {\n    $(document).on(\"click\", \".unblock-post-btn\", function () {\n      const $btn = $(this);\n      const postId = $btn.data(\"post-id\");\n      const postItem = $btn.closest(\".post-item\");\n      const originalContent = postItem.data(\"original-content\");\n\n      if (confirmAction(\"unblock this post\")) {\n        performPostAction(postId, \"unblock\", $btn).then(function (result) {\n          if (result.success) {\n            postItem.removeClass(\"blocked-post\");\n\n            // Если пост не удален, восстанавливаем оригинальное содержимое\n            if (!postItem.hasClass(\"deleted-post\")) {\n              postItem.find(\".post-content\").html(`<p>${originalContent}</p>`);\n            }\n\n            updatePostStatusVisuals(postItem);\n            showUserMessage(result.message || \"Post unblocked\", \"success\");\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Set up comment visibility toggle functionality\n   */\n  function setupCommentToggle() {\n    $(document).on(\"click\", \".toggle-comments-btn\", function () {\n      const button = $(this);\n      const postItem = button.closest(\".post-item\");\n      const commentsSection = postItem.find(\".comments-section\");\n\n      // Toggle active state for button (for color inversion)\n      button.toggleClass(\"active\");\n\n      // Toggle visibility with animation\n      if (commentsSection.hasClass(\"hidden\")) {\n        commentsSection.removeClass(\"hidden\");\n\n        // Use setTimeout to allow the CSS transition to work properly\n        setTimeout(function () {\n          commentsSection.addClass(\"visible\");\n        }, 10);\n\n        button.html('<i class=\"fas fa-angle-up\"></i> Hide commentaries');\n      } else {\n        commentsSection.removeClass(\"visible\");\n\n        // Use setTimeout to wait for animation to complete before hiding\n        setTimeout(function () {\n          commentsSection.addClass(\"hidden\");\n        }, 400); // match transition duration\n\n        button.html('<i class=\"fas fa-angle-down\"></i> Show commentaries');\n      }\n    });\n  }\n\n  /**\n   * Update the comments count and related UI elements\n   * @param {jQuery} postItem - Post item element\n   * @param {Number} count - New comments count\n   */\n  function updateCommentsCount(postItem, count) {\n    // Update the count text\n    const commentsCount = postItem.find(\".comments-count\");\n    commentsCount.text(`Comments (${count})`);\n\n    // Check if this was the last comment\n    const commentsSection = postItem.find(\".comments-section\");\n    const remainingComments = commentsSection.find(\".comment-item\").length;\n\n    // If we have 0 comments and the section is not already hidden\n    if (count === 0 && !commentsSection.hasClass(\"hidden\")) {\n      // Add no comments message if it doesn't exist\n      if (commentsSection.find(\".no-comments-message\").length === 0) {\n        commentsSection.html('<p class=\"no-comments-message\">No comments</p>');\n      }\n      commentsSection.addClass(\"visible\");\n    }\n\n    // Update the toggle button text\n    const toggleBtn = postItem.find(\".toggle-comments-btn\");\n    if (toggleBtn.length) {\n      toggleBtn.text(count > 0 ? `Show comments (${count})` : \"No comments\");\n\n      // Hide toggle button if no comments\n      if (count === 0) {\n        toggleBtn.addClass(\"disabled\");\n      } else {\n        toggleBtn.removeClass(\"disabled\");\n      }\n    }\n  }\n\n  /**\n   * Set up comment deletion\n   */\n  function setupCommentActions() {\n    // Delete comment\n    $(document).on(\"click\", \".delete-comment-btn\", function () {\n      const $btn = $(this);\n      const postId = $btn.data(\"post-id\");\n      const commentId = $btn.data(\"comment-id\");\n      const commentItem = $btn.closest(\".comment-item\");\n      const postItem = $btn.closest(\".post-item\");\n      const commentsCount = postItem.find(\".comments-count\");\n\n      if (confirmAction(\"delete this comment\")) {\n        executeApiCall({\n          url: `/admin/posts/${postId}/comments/${commentId}`,\n          method: \"DELETE\",\n          element: $btn,\n          successCallback: function (data) {\n            // Remove comment from DOM\n            commentItem.fadeOut(300, function () {\n              $(this).remove();\n\n              // Get the current post item\n              const postItem = commentsCount.closest(\".post-item\");\n\n              // Calculate new count\n              const count = parseInt(commentsCount.text().match(/\\d+/)[0]) - 1;\n\n              // Update UI with new count\n              updateCommentsCount(postItem, count);\n\n              // Check if this was the last comment\n              const commentsSection = postItem.find(\".comments-section\");\n              const remainingComments =\n                commentsSection.find(\".comment-item\").length;\n\n              if (\n                remainingComments === 0 &&\n                !commentsSection.hasClass(\"hidden\")\n              ) {\n                // Add no comments message\n                commentsSection.html(\n                  '<p class=\"no-comments-message\">No commentaries</p>'\n                );\n                commentsSection.addClass(\"visible\");\n              }\n\n              // Show message\n              showUserMessage(\"Comment deleted successfully\", \"success\");\n            });\n          },\n          errorCallback: function (error) {\n            showUserMessage(\"Failed to delete comment\", \"error\");\n            console.error(\"Error deleting comment:\", error);\n          },\n        });\n      }\n    });\n  }\n\n  /**\n   * ====================================================\n   * UTILITY FUNCTIONS\n   * ====================================================\n   */\n\n  /**\n   * Display a confirmation dialog for post actions\n   * @param {string} actionText - Text describing the action\n   * @returns {boolean} - True if confirmed, false otherwise\n   */\n  function confirmAction(actionText) {\n    return confirm(`Are you sure you want to ${actionText}?`);\n  }\n\n  /**\n   * Perform post action (delete, restore, block, unblock)\n   * @param {string} postId - ID of the post\n   * @param {string} action - Action to perform (delete, restore, block, unblock)\n   * @param {jQuery} element - Button or element that triggered the action\n   * @returns {Promise} Promise that resolves with the API response\n   */\n  function performPostAction(postId, action, element) {\n    return new Promise((resolve, reject) => {\n      executeApiCall({\n        url: `/admin/api/posts/${postId}/${action}`,\n        method: \"POST\",\n        element: element,\n        successCallback: function (data) {\n          resolve(data);\n        },\n        errorCallback: function (error, errorData) {\n          showUserMessage(\n            errorData.message || `Failed to ${action} post`,\n            \"error\"\n          );\n          reject(errorData);\n        },\n      });\n    });\n  }\n\n  /**\n   * Update post visual elements based on state\n   * @param {jQuery} postItem - The post item element\n   */\n  function updatePostStatusVisuals(postItem) {\n    const isDeleted = postItem.hasClass(\"deleted-post\");\n    const isBlocked = postItem.hasClass(\"blocked-post\");\n    const originalContent = postItem.data(\"original-content\");\n\n    // Get all action buttons\n    const $deleteBtn = postItem.find(\".delete-post-btn\");\n    const $restoreBtn = postItem.find(\".restore-post-btn\");\n    const $blockBtn = postItem.find(\".block-post-btn\");\n    const $unblockBtn = postItem.find(\".unblock-post-btn\");\n\n    // Update status badges\n    const $statusContainer = postItem.find(\".post-status-badges\");\n    $statusContainer.empty();\n\n    if (isDeleted) {\n      $statusContainer.append(\n        '<span class=\"deleted-status status-badge\">DELETED</span>'\n      );\n      // Если пост удален, заменяем содержимое на системное сообщение\n      postItem\n        .find(\".post-content\")\n        .html(\n          '<p class=\"system-message\">This post was deleted by the admin, because it violated the community rules.</p>'\n        );\n    } else {\n      // Проверяем, было ли восстановление\n      if (\n        !postItem.find(\".post-content p.system-message\").length &&\n        !postItem.find(\".post-content p\").text()\n      ) {\n        postItem.find(\".post-content\").html(`<p>${originalContent}</p>`);\n      }\n    }\n\n    if (isBlocked) {\n      $statusContainer.append(\n        '<span class=\"blocked-status status-badge\">BLOCKED</span>'\n      );\n\n      // Если пост заблокирован, но не удален, показываем сообщение о блокировке\n      if (!isDeleted) {\n        postItem\n          .find(\".post-content\")\n          .html(\n            '<p class=\"system-message\">This post was blocked by the admin, because it violated the community rules.</p>'\n          );\n      }\n    } else if (!isDeleted) {\n      // Если пост не заблокирован и не удален, восстанавливаем оригинальное содержимое\n      postItem.find(\".post-content\").html(`<p>${originalContent}</p>`);\n    }\n\n    // Update button states\n    $deleteBtn.prop(\"disabled\", isDeleted);\n    $restoreBtn.prop(\"disabled\", !isDeleted);\n    $blockBtn.prop(\"disabled\", isBlocked || isDeleted);\n    $unblockBtn.prop(\"disabled\", !isBlocked || isDeleted);\n\n    // Update comments section\n    const $commentsSection = postItem.find(\".comments-section\");\n    const $commentsToggle = postItem.find(\".toggle-comments-btn\");\n\n    if (isDeleted || isBlocked) {\n      if (isDeleted) {\n        $commentsToggle.addClass(\"deleted-btn\").removeClass(\"blocked-btn\");\n      } else if (isBlocked) {\n        $commentsToggle.addClass(\"blocked-btn\").removeClass(\"deleted-btn\");\n      }\n\n      // If comments are visible, hide them\n      if (!$commentsSection.hasClass(\"hidden\")) {\n        $commentsSection.addClass(\"hidden\");\n        $commentsToggle.html('<i class=\"fas fa-angle-down\"></i> Show Comments');\n      }\n    } else {\n      $commentsToggle.removeClass(\"deleted-btn blocked-btn\");\n    }\n  }\n\n  /**\n   * Enhanced error handling utility\n   * @param {Object|string} error - Error object or message\n   * @param {string} context - Context where error occurred\n   * @param {boolean} showToUser - Whether to show the error to the user\n   */\n  function handleError(error, context, showToUser = true) {\n    // Determine error type and extract message\n    let errorMessage = \"An unexpected error occurred\";\n    let errorDetails = {};\n\n    if (typeof error === \"string\") {\n      errorMessage = error;\n    } else if (error.responseJSON) {\n      // AJAX error\n      errorMessage =\n        error.responseJSON.error ||\n        `Server error (${error.status || \"unknown status\"})`;\n      errorDetails = {\n        status: error.status,\n        statusText: error.statusText,\n        responseJSON: error.responseJSON,\n      };\n    } else if (error instanceof Error) {\n      // JavaScript error\n      errorMessage = error.message;\n      errorDetails = {\n        name: error.name,\n        stack: error.stack,\n      };\n    } else if (error.error) {\n      // Custom error object\n      errorMessage = error.error;\n      errorDetails = error;\n    }\n\n    // Log the error with context for debugging\n    console.error(`Error in ${context}:`, errorMessage, errorDetails);\n\n    // Show error message to user if needed\n    if (showToUser) {\n      showUserMessage(errorMessage, \"error\");\n    }\n\n    // Return formatted error for further processing if needed\n    return {\n      message: errorMessage,\n      details: errorDetails,\n      context,\n    };\n  }\n\n  /**\n   * Execute API call with loading indicator and error handling\n   * @param {Object} options - Options for the API call\n   * @param {string} options.url - API endpoint URL\n   * @param {string} options.method - HTTP method (GET, POST, etc.)\n   * @param {Object} options.data - Data to send (for POST, PUT, etc.)\n   * @param {jQuery} options.element - Element to show loading state on\n   * @param {boolean} options.showLoadingContainer - Whether to show loading state on container\n   * @param {string} options.loadingContainer - Selector for container to show loading state on\n   * @param {Function} options.successCallback - Callback on success\n   * @param {Function} options.errorCallback - Callback on error\n   */\n  function executeApiCall(options) {\n    // Default options\n    const defaults = {\n      method: \"GET\",\n      data: {},\n      showLoadingContainer: false,\n    };\n\n    // Merge defaults with options\n    const settings = { ...defaults, ...options };\n\n    // Add loading state to button or element\n    if (settings.element) {\n      settings.element.addClass(\"loading\");\n    }\n\n    // Add loading state to container\n    if (settings.showLoadingContainer && settings.loadingContainer) {\n      const container = $(settings.loadingContainer);\n      container.addClass(\"loading container-loading\");\n    }\n\n    $.ajax({\n      url: settings.url,\n      method: settings.method,\n      data: settings.data,\n      success: function (data) {\n        // Remove loading states\n        if (settings.element) {\n          settings.element.removeClass(\"loading\");\n        }\n\n        if (settings.showLoadingContainer && settings.loadingContainer) {\n          $(settings.loadingContainer).removeClass(\"loading container-loading\");\n        }\n\n        // Call success callback if provided\n        if (typeof settings.successCallback === \"function\") {\n          settings.successCallback(data);\n        }\n      },\n      error: function (xhr, status, error) {\n        // Remove loading states\n        if (settings.element) {\n          settings.element.removeClass(\"loading\");\n        }\n\n        if (settings.showLoadingContainer && settings.loadingContainer) {\n          $(settings.loadingContainer).removeClass(\"loading container-loading\");\n        }\n\n        // Parse error data if available\n        let errorData = { message: \"An error occurred\" };\n        try {\n          if (xhr.responseJSON) {\n            errorData = xhr.responseJSON;\n          } else if (xhr.responseText) {\n            errorData = JSON.parse(xhr.responseText);\n          }\n        } catch (e) {\n          console.warn(\"Failed to parse error response:\", e);\n        }\n\n        // Call error callback if provided\n        if (typeof settings.errorCallback === \"function\") {\n          settings.errorCallback(error, errorData, xhr);\n        } else {\n          // Default error handling\n          handleError(error, {\n            context: `API call to ${settings.url}`,\n            status: xhr.status,\n            errorData,\n          });\n        }\n      },\n    });\n  }\n\n  /**\n   * Update post status and UI based on the given configuration\n   * @param {jQuery} postItem - The post item element\n   * @param {Object} config - Configuration for the update\n   */\n  function updatePostStatus(postItem, config) {\n    // Add class if specified\n    if (config.addClass) {\n      postItem.addClass(config.addClass);\n    }\n\n    // Add badge if specified\n    if (config.badge && !postItem.find(`.${config.badge.type}`).length) {\n      postItem\n        .find(\".post-status-badges\")\n        .append(\n          `<span class=\"${config.badge.type} status-badge\">${config.badge.text}</span>`\n        );\n    }\n\n    // Update content if a system message is provided\n    if (config.systemMessage) {\n      postItem\n        .find(\".post-content\")\n        .html(`<p class=\"system-message\">${config.systemMessage}</p>`);\n    }\n\n    // Update comment button styles if specified\n    if (config.commentBtnUpdates) {\n      const commentBtn = postItem.find(\".toggle-comments-btn\");\n\n      if (config.commentBtnUpdates.removeClass) {\n        commentBtn.removeClass(config.commentBtnUpdates.removeClass);\n      }\n\n      if (config.commentBtnUpdates.addClass) {\n        commentBtn.addClass(config.commentBtnUpdates.addClass);\n      }\n    }\n\n    // Enable/disable buttons\n    if (config.buttonToEnable) {\n      postItem.find(`.${config.buttonToEnable}`).prop(\"disabled\", false);\n    }\n\n    if (config.buttonToDisable) {\n      postItem.find(`.${config.buttonToDisable}`).prop(\"disabled\", true);\n    }\n\n    // Update all button states\n    updatePostActionsUI(postItem);\n  }\n\n  /**\n   * Update the UI state of all action buttons for a post\n   * @param {jQuery} postItem - The post item element\n   */\n  function updatePostActionsUI(postItem) {\n    const isDeleted = postItem.hasClass(\"deleted-post\");\n    const isBlocked = postItem.hasClass(\"blocked-post\");\n\n    // Delete button is active only if post is not deleted\n    postItem.find(\".delete-post-btn\").prop(\"disabled\", isDeleted);\n\n    // Restore button is active only if post is deleted\n    postItem.find(\".restore-post-btn\").prop(\"disabled\", !isDeleted);\n\n    // Block button is active only if post is not blocked and not deleted\n    postItem.find(\".block-post-btn\").prop(\"disabled\", isBlocked || isDeleted);\n\n    // Unblock button is active only if post is blocked and not deleted\n    postItem\n      .find(\".unblock-post-btn\")\n      .prop(\"disabled\", !isBlocked || isDeleted);\n  }\n\n  // Вызываем функцию при загрузке страницы\n  $(document).ready(function () {\n    // ... existing code ...\n    // ... existing code ...\n  });\n});\n"],"mappings":"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","ignoreList":[]}